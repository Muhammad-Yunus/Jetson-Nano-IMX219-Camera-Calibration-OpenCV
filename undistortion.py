import cv2 
import numpy as np
import os

# Camera matrix generated by `find_chessboard_corners.py`
mtx = np.array([[1.07975414e+03, 0.00000000e+00, 4.03079138e+02],
                [0.00000000e+00, 9.75039165e+02, 3.19767861e+02],
                [0.00000000e+00, 0.00000000e+00, 1.00000000e+00]])
dist = np.array([[-2.68066717e+00,  2.22829147e+01,  2.53538754e-02, -5.57868851e-02, -1.15847689e+02]])


for filename in os.listdir("capture/"):
    print("read filename %s" % filename)
    # load image
    img = cv2.imread('capture/' + filename)
    if img is None :
        print("empty image with filename %s" % filename) 
        continue
    img = cv2.resize(img, (0,0), fx=0.25, fy=0.25)
    h, w, c = img.shape

    # refine the camera matrix based on a free scaling parameter using cv.getOptimalNewCameraMatrix().
    newcameramtx, roi = cv2.getOptimalNewCameraMatrix(mtx, dist, (w,h), 0, (w,h))

    # undistort using cv2.undistort()
    dst = cv2.undistort(img, mtx, dist, None, newcameramtx)

    # crop the image
    x, y, w, h = roi
    dst = dst[y:y+h, x:x+w]

    cv2.imshow('calibresult.png', dst)
    cv2.waitKey(0)
cv2.destroyAllWindows()